{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "deployFirewall": {
      "type": "bool",
      "defaultValue": true
    },
    "deployFrontDoor": {
      "type": "bool",
      "defaultValue": true
    },
    "deployVirtualMachines": {
      "type": "bool",
      "defaultValue": true
    },
    "filesLocation": {
      "type": "string"
      "defaultValue":"https://raw.githubusercontent.com/pgmorozov/NetworkSecurity/main"
    },
    "resourceNamePrefix": {
      "type": "string"
    },
    "resourceNameSuffix": {
      "type": "string"
    },
    "_resourceNames": {
      "type": "object",
      "defaultValue": {}
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "win10VmIpAddress": {
      "type": "string",
      "defaultValue": "10.0.27.4"
    },
    "kaliVmIpAddress": {
      "type": "string",
      "defaultValue": "10.0.27.68"
    },
    "win2019VmIpAddress": {
      "type": "string",
      "defaultValue": "10.0.28.4"
    },
    "appGatewayIpAddress": {
      "type": "string",
      "defaultValue": "10.0.25.70"
    },
    "defaultUserName": {
      "type": "securestring"
    },
    "defaultPassword": {
      "type": "securestring"
    },
    "_sasToken": {
      "type": "secureString",
      "defaultValue": ""
    },
    "workspaceResourceGroup": {
      "type": "string"
    },
    "workspaceName": {
      "type": "string"
    }
  },
  "variables": {
    "workspaceId": "[resourceId(parameters('workspaceResourceGroup'), 'microsoft.operationalinsights/workspaces', parameters('workspaceName'))]",
    "resourceNameSuffix": "[if(empty(parameters('resourceNameSuffix')), '', concat('-', parameters('resourceNameSuffix')))]",
    "combinedResourceNames": {
      "nsg1": "[concat(parameters('resourceNamePrefix'), '-NSG1', variables('resourceNameSuffix'))]",
      "nsg2": "[concat(parameters('resourceNamePrefix'), '-NSG2', variables('resourceNameSuffix'))]",
      "ddosProtectionPlan": "[concat(parameters('resourceNamePrefix'), '-DDOS-PLAN', variables('resourceNameSuffix'))]",
      "routeTable": "[concat(parameters('resourceNamePrefix'), '-RT', variables('resourceNameSuffix'))]",
      "vnet1": "[concat(parameters('resourceNamePrefix'), '-VN-HUB', variables('resourceNameSuffix'))]",
      "vnet1subnet1": "AGWAFSubnet",
      "vnet1subnet2": "AzureFirewallSubnet",
      "vnet2": "[concat(parameters('resourceNamePrefix'), '-VN-SPOKE1', variables('resourceNameSuffix'))]",
      "vnet2subnet1": "SPOKE1-SUBNET1",
      "vnet2subnet2": "SPOKE1-SUBNET2",
      "vnet3": "[concat(parameters('resourceNamePrefix'), '-VN-SPOKE2', variables('resourceNameSuffix'))]",
      "vnet3subnet1": "SPOKE2-SUBNET1",
      "vnet3subnet2": "AzureBastionSubnet",

      "fwIpAddress": "[concat(parameters('resourceNamePrefix'), '-NS-FW-PIP', variables('resourceNameSuffix'))]",
      "firewall": "[concat(parameters('resourceNamePrefix'), '-NS-FW', variables('resourceNameSuffix'))]",
      "firewallPolicy": "[concat(parameters('resourceNamePrefix'), 'NSFWPolicy', tolower(parameters('resourceNameSuffix')))]",
      "fwIdentityName": "[concat(parameters('resourceNamePrefix'), '-FW-KV-TLS', variables('resourceNameSuffix'))]",
      "fwCACetificateName": "ContosoAzureCA",

      "kaliVm": "[concat(parameters('resourceNamePrefix'), '-Kali', variables('resourceNameSuffix'))]",
      "win2019Vm": "[concat(parameters('resourceNamePrefix'), '-W2019', variables('resourceNameSuffix'))]",
      "win10Vm": "[concat(parameters('resourceNamePrefix'), '-W10', variables('resourceNameSuffix'))]",

      "fdProfileName": "[concat(parameters('resourceNamePrefix'), '-NS-FD', variables('resourceNameSuffix'))]",
      "fdEndpointName": "[concat(parameters('resourceNamePrefix'), '-NS-FD-EP', variables('resourceNameSuffix'))]",
      "fdOriginGroupName": "[concat(parameters('resourceNamePrefix'), '-NS-FD-OWASP', variables('resourceNameSuffix'))]",
      "fdRouteName": "[concat(parameters('resourceNamePrefix'), '-NS-FD-APPGw', variables('resourceNameSuffix'))]",
      "fdOriginName": "[concat(parameters('resourceNamePrefix'), '-NS-FD-OWASP-APPGW', variables('resourceNameSuffix'))]",
      "fdWafName": "[concat(parameters('resourceNamePrefix'), 'NSFDWAF', tolower(parameters('resourceNameSuffix')))]",
      "fdSecurityPolicyName": "[concat(parameters('resourceNamePrefix'), '-NS-FD-SecPol', variables('resourceNameSuffix'))]",

      "appServicePlan": "[concat(parameters('resourceNamePrefix'), '-OWASP-ASP', variables('resourceNameSuffix'))]",
      "appService": "[concat(parameters('resourceNamePrefix'), '-owaspdirect', variables('resourceNameSuffix'))]",

      "agIpAddress": "[concat(parameters('resourceNamePrefix'), '-NS-AGP-PIP', variables('resourceNameSuffix'))]",
      "appGateway": "[concat(parameters('resourceNamePrefix'), '-NS-AG-WAFv2', variables('resourceNameSuffix'))]",
      "appGatewayPolicy": "[concat(parameters('resourceNamePrefix'), '-NS-AGPolicy', variables('resourceNameSuffix'))]",

      "bastion": "[concat(parameters('resourceNamePrefix'), '-NS-BASTION', variables('resourceNameSuffix'))]",
      "bastionIpAddress": "[concat(parameters('resourceNamePrefix'), '-NS-BASTION-PIP', variables('resourceNameSuffix'))]",

      "logAnalyticsWs": "$(workspaceName)",
      "logAnalyticsWsRGName": "$(workspaceResourceGroupName)",
      "tableConnection": "[concat(parameters('resourceNamePrefix'), '-tableconnection', variables('resourceNameSuffix'))]",
      "enableDdosProtectionApp": "[concat(parameters('resourceNamePrefix'), '-EnbleDDoSProtection', variables('resourceNameSuffix'))]",
      "disableDdosProtectionApp": "[concat(parameters('resourceNamePrefix'), '-DisableDDoSProtection', variables('resourceNameSuffix'))]",
      "ddosProtectionSchedulerApp": "[concat(parameters('resourceNamePrefix'), '-DDoSProtectionScheduler', variables('resourceNameSuffix'))]",
      "storage": "[concat(parameters('resourceNamePrefix'), 'nssa', tolower(parameters('resourceNameSuffix')))]",

      "keyVaultName": "[concat(parameters('resourceNamePrefix'), '-NS-KV', variables('resourceNameSuffix'))]",
      "CAcertScript": "CreateAndDeployCertificates"
    },
    "resourceNames": "[if(empty(parameters('_resourceNames')), variables('combinedResourceNames'), parameters('_resourceNames'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "Networking_keyVault",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('filesLocation'), '/Networking/keyVault.json' , parameters('_sasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "resourceNames": {
            "value": "[variables('resourceNames')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "Networking_vNets",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('filesLocation'), '/Networking/vNets.json' , parameters('_sasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "resourceNames": {
            "value": "[variables('resourceNames')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "Networking_firewall",
      "condition": "[parameters('deployFirewall')]",
      "dependsOn": [
        "Networking_keyVault",
        "Networking_vNets"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('filesLocation'), '/Networking/firewall.json' , parameters('_sasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "resourceNames": {
            "value": "[variables('resourceNames')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "win10VmIpAddress": {
            "value": "[parameters('win10VmIpAddress')]"
          },
          "kaliVmIpAddress": {
            "value": "[parameters('kaliVmIpAddress')]"
          },
          "win2019VmIpAddress": {
            "value": "[parameters('win2019VmIpAddress')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "Networking_bastion",
      "dependsOn": [
        "Networking_vNets"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('filesLocation'), '/Networking/bastion.json' , parameters('_sasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "resourceNames": {
            "value": "[variables('resourceNames')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "WebApp_appService",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('filesLocation'), '/WebApp/appService.json' , parameters('_sasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "resourceNames": {
            "value": "[variables('resourceNames')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "WebApp_gateway",
      "dependsOn": [
        "Networking_vNets"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('filesLocation'), '/WebApp/gateway.json' , parameters('_sasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "resourceNames": {
            "value": "[variables('resourceNames')]"
          },
          "appGatewayIpAddress": {
            "value": "[parameters('appGatewayIpAddress')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "WebApp_frontdoor",
      "condition": "[parameters('deployFrontDoor')]",
      "dependsOn": [
        "WebApp_gateway"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('filesLocation'), '/WebApp/frontdoor.json' , parameters('_sasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "resourceNames": {
            "value": "[variables('resourceNames')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "VMs_kali",
      "condition": "[parameters('deployVirtualMachines')]",
      "dependsOn": [
        "Networking_vNets"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('filesLocation'), '/VMs/kaliVM.json' , parameters('_sasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "resourceNames": {
            "value": "[variables('resourceNames')]"
          },
          "kaliVmIpAddress": {
            "value": "[parameters('kaliVmIpAddress')]"
          },
          "defaultUserName": {
            "value": "[parameters('defaultUserName')]"
          },
          "defaultPassword": {
            "value": "[parameters('defaultPassword')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "VMs_win10",
      "condition": "[parameters('deployVirtualMachines')]",
      "dependsOn": [
        "Networking_vNets"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('filesLocation'), '/VMs/win10VM.json' , parameters('_sasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "resourceNames": {
            "value": "[variables('resourceNames')]"
          },
          "win10VmIpAddress": {
            "value": "[parameters('win10VmIpAddress')]"
          },
          "defaultUserName": {
            "value": "[parameters('defaultUserName')]"
          },
          "defaultPassword": {
            "value": "[parameters('defaultPassword')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "VMs_win2019",
      "condition": "[parameters('deployVirtualMachines')]",
      "dependsOn": [
        "Networking_vNets"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('filesLocation'), '/VMs/win2019VM.json' , parameters('_sasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "resourceNames": {
            "value": "[variables('resourceNames')]"
          },
          "win2019VmIpAddress": {
            "value": "[parameters('win2019VmIpAddress')]"
          },
          "defaultUserName": {
            "value": "[parameters('defaultUserName')]"
          },
          "defaultPassword": {
            "value": "[parameters('defaultPassword')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "VMs_certs",
      "condition": "[parameters('deployVirtualMachines')]",
      "dependsOn": [
        "VMs_win2019",
        "VMs_win10",
        "Networking_keyVault"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('filesLocation'), '/VMs/vmCerts.json' , parameters('_sasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "rootCert": {
            "value": "[reference('Networking_keyVault').outputs.clientCert.value]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "vmNames": {
            "value": [
              "[variables('resourceNames').win2019Vm]",
              "[variables('resourceNames').win10Vm]"
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "LogicApps_storageAccount",
      "dependsOn": [
        "Networking_vNets"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('filesLocation'), '/LogicApps/storageAccount.json' , parameters('_sasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "resourceNames": {
            "value": "[variables('resourceNames')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "LogicApps_enable",
      "dependsOn": [
        "Networking_vNets"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('filesLocation'), '/LogicApps/enable.json' , parameters('_sasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "resourceNames": {
            "value": "[variables('resourceNames')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "LogicApps_disable",
      "dependsOn": [
        "Networking_vNets"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('filesLocation'), '/LogicApps/disable.json' , parameters('_sasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "resourceNames": {
            "value": "[variables('resourceNames')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "LogicApps_scheduler",
      "dependsOn": [
        "Networking_vNets"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('filesLocation'), '/LogicApps/scheduler.json' , parameters('_sasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "resourceNames": {
            "value": "[variables('resourceNames')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "Monitoring_diagnosticSettings",
      "dependsOn": [
        "Networking_vNets",
        "WebApp_gateway",
        "WebApp_frontdoor",
        "Networking_firewall"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('filesLocation'), '/Monitoring/diagSettings.json' , parameters('_sasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "deployFirewall": {
            "value": "[parameters('deployFirewall')]"
          },
          "deployFrontDoor": {
            "value": "[parameters('deployFrontDoor')]"
          },
          "deployVirtualMachines": {
            "value": "[parameters('deployVirtualMachines')]"
          },
          "resourceNames": {
            "value": "[variables('resourceNames')]"
          },
          "workspaceId": {
            "value": "[variables('workspaceId')]"
          }
        }
      }
    }
  ]
}
