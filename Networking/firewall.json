{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string"
    },
    "resourceNames": {
      "type": "object"
    },
    "win10VmIpAddress": {
      "type": "string"
    },
    "kaliVmIpAddress": {
      "type": "string"
    },
    "win2019VmIpAddress": {
      "type": "string"
    }
  },
  "variables": {
    "vnetDTFPrefix": "10.0.24.0/24",
    "vnet2Prefix": "10.0.27.0/24",
    "vnet3Prefix": "10.0.28.0/24"
  },
  "resources": [
    {
        "name": "[parameters('resourceNames').fwIdentityName]",
        "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
        "apiVersion": "2018-11-30",
        "location": "[parameters('location')]"
    },
    {
      "name": "[concat(parameters('resourceNames').keyVaultName, '/add')]",
      "type": "Microsoft.KeyVault/vaults/accessPolicies",
      "apiVersion": "2019-09-01",
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('resourceNames').fwIdentityName)]"
      ],
      "properties": {
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('resourceNames').fwIdentityName), '2018-11-30', 'Full').properties.principalId]",
            "permissions": {
              "secrets": [
                "get",
                "list"
              ]
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2019-02-01",
      "name": "[parameters('resourceNames').fwIpAddress]",
      "location": "[parameters('location')]",
      "tags": {},
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static",
        "idleTimeoutInMinutes": 4
      }
    },
    {
      "type": "Microsoft.Network/azureFirewalls",
      "apiVersion": "2020-05-01",
      "name": "[parameters('resourceNames').firewall]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/firewallPolicies', parameters('resourceNames').firewallPolicy)]",
        "[resourceId('Microsoft.Network/firewallPolicies/ruleCollectionGroups', parameters('resourceNames').firewallPolicy, 'DefaultDnatRuleCollectionGroup')]",
        "[resourceId('Microsoft.Network/firewallPolicies/ruleCollectionGroups', parameters('resourceNames').firewallPolicy, 'DefaultNetworkRuleCollectionGroup')]",
        "[resourceId('Microsoft.Network/firewallPolicies/ruleCollectionGroups', parameters('resourceNames').firewallPolicy, 'DefaultApplicationRuleCollectionGroup')]"
      ],
      "tags": {},
      "properties": {
        "sku": {
          "name": "AZFW_VNet",
          "tier": "Premium"
        },
        "threatIntelMode": "Deny",
        "ipConfigurations": [
          {
            "name": "[parameters('resourceNames').fwIpAddress]",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('resourceNames').vnet1, parameters('resourceNames').vnet1subnet2)]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('resourceNames').fwIpAddress)]"
              }
            }
          }
        ],
        "firewallPolicy": {
          "id": "[resourceId('Microsoft.Network/firewallPolicies', parameters('resourceNames').firewallPolicy)]"
        }
      }
    },
    {
      "type": "Microsoft.Network/firewallPolicies",
      "apiVersion": "2020-05-01",
      "name": "[parameters('resourceNames').firewallPolicy]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('resourceNames').fwIdentityName)]": {}
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults/accessPolicies', parameters('resourceNames').keyVaultName, 'add')]"
      ],
      "tags": {},
      "properties": {
        "sku": {
          "tier": "Premium"
        },
        "threatIntelMode": "Deny",
        "transportSecurity": {
          "certificateAuthority": {
            "keyVaultSecretId": "[concat(reference(resourceId('Microsoft.KeyVault/vaults', parameters('resourceNames').keyVaultName), '2019-09-01').vaultUri,'secrets/', parameters('resourceNames').fwCACetificateName)]",
            "name": "[parameters('resourceNames').fwCACetificateName]"
          }
        },
        "intrusionDetection": {
          "mode": "Alert",
          "configuration": {
            "signatureOverrides": [
              {
                  "id": "2008983",
                  "mode": "Deny"
              }
            ]
          }
        }
      },
      "resources": [
        {
          "name": "DefaultDnatRuleCollectionGroup",
          "type": "ruleCollectionGroups",
          "apiVersion": "2020-07-01",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[resourceId('Microsoft.Network/firewallPolicies', parameters('resourceNames').firewallPolicy)]"
          ],
          "properties": {
            "priority": 100
          }
        },        
        {
          "name": "DefaultNetworkRuleCollectionGroup",
          "type": "ruleCollectionGroups",
          "apiVersion": "2020-07-01",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[resourceId('Microsoft.Network/firewallPolicies/ruleCollectionGroups', parameters('resourceNames').firewallPolicy, 'DefaultDnatRuleCollectionGroup')]",
            "[resourceId('Microsoft.Network/firewallPolicies', parameters('resourceNames').firewallPolicy)]"
          ],
          "properties": {
            "priority": 200,
            "ruleCollections": [
              {
                "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                "name": "IntraVNETandHTTPOutAccess",
                "priority": 100,
                "action": {
                  "type": "Allow"
                },
                "rules": [
                  {
                    "ruleType": "NetworkRule",
                    "name": "SMB",
                    "ipProtocols": [
                      "TCP"
                    ],
                    "destinationPorts": [
                      "445"
                    ],
                    "sourceAddresses": [
                      "[parameters('kaliVmIpAddress')]",
                      "[parameters('win2019VmIpAddress')]",
                      "[parameters('win10VmIpAddress')]"
                    ],
                    "destinationAddresses": [
                      "[parameters('kaliVmIpAddress')]",
                      "[parameters('win2019VmIpAddress')]",
                      "[parameters('win10VmIpAddress')]"
                    ]
                  },
                  {
                    "ruleType": "NetworkRule",
                    "name": "RDP",
                    "ipProtocols": [
                      "TCP"
                    ],
                    "destinationPorts": [
                      "3389"
                    ],
                    "sourceAddresses": [
                      "[parameters('kaliVmIpAddress')]",
                      "[parameters('win2019VmIpAddress')]",
                      "[parameters('win10VmIpAddress')]"
                    ],
                    "destinationAddresses": [
                      "[parameters('kaliVmIpAddress')]",
                      "[parameters('win2019VmIpAddress')]",
                      "[parameters('win10VmIpAddress')]"
                    ]
                  },
                  {
                    "ruleType": "NetworkRule",
                    "name": "SSH",
                    "ipProtocols": [
                      "TCP"
                    ],
                    "destinationPorts": [
                      "22"
                    ],
                    "sourceAddresses": [
                      "[parameters('win10VmIpAddress')]",
                      "[parameters('win2019VmIpAddress')]"
                    ],
                    "destinationAddresses": [
                      "[parameters('kaliVmIpAddress')]"
                    ]
                  },
                  {
                    "ruleType": "NetworkRule",
                    "name": "HTTP",
                    "ipProtocols": [
                      "TCP"
                    ],
                    "sourceAddresses": [
                      "*"
                    ],
                    "destinationAddresses": [
                      "[parameters('win2019VmIpAddress')]"
                    ],
                    "destinationPorts": [
                      "80"
                    ]
                  }
                ]
              },
              {
                "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                "name": "DTF-NetworkRule",
                "priority": 101,
                "action": {
                  "type": "Allow"
                },
                "rules": [
                  {
                    "ruleType": "NetworkRule",
                    "name": "DefendTheFlag",
                    "ipProtocols": [
                      "Any"
                    ],
                    "sourceAddresses": [
                      "[variables('vnetDTFPrefix')]"
                    ],
                    "destinationAddresses": [
                      "*"
                    ],
                    "destinationPorts": [
                      "*"
                    ]
                  }
                ]
              }
            ]
          }
        },
        {
          "name": "DefaultApplicationRuleCollectionGroup",
          "type": "ruleCollectionGroups",
          "apiVersion": "2020-07-01",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[resourceId('Microsoft.Network/firewallPolicies/ruleCollectionGroups', parameters('resourceNames').firewallPolicy, 'DefaultNetworkRuleCollectionGroup')]",
            "[resourceId('Microsoft.Network/firewallPolicies', parameters('resourceNames').firewallPolicy)]"
          ],
          "properties": {
            "priority": 300,
            "ruleCollections": [
              {
                "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                "name": "Internet-Access",
                "priority": 100,
                "action": {
                    "type": "Allow"
                },
                "rules": [
                  {
                    "ruleType": "ApplicationRule",
                    "name": "NetSec-TechCommunity",
                    "protocols": [
                      {
                        "protocolType": "Http",
                        "port": 80
                      },
                      {
                        "protocolType": "Https",
                        "port": 443
                      }
                    ],
                    "targetUrls": [
                        "techcommunity.microsoft.com/t5/azure-network-security/*"
                    ],
                    "terminateTLS": true,
                    "sourceAddresses": [
                        "*"
                    ]
                  },
                  {
                    "ruleType": "ApplicationRule",
                    "name": "DTF-InternetAccess",
                    "protocols": [
                      {
                        "protocolType": "Http",
                        "port": 80
                      },
                      {
                        "protocolType": "Https",
                        "port": 443
                      }
                    ],
                    "targetFqdns": [
                      "*"
                    ],
                    "terminateTLS": false,
                    "sourceAddresses": [
                      "[variables('vnetDTFPrefix')]"
                    ]
                  },
                  {
                    "ruleType": "ApplicationRule",
                    "name": "Allowed-WebCategories",
                    "protocols": [
                      {
                        "protocolType": "Http",
                        "port": 80
                      },
                      {
                        "protocolType": "Https",
                        "port": 443
                      }
                    ],
                    "webCategories": [
                      "searchenginesandportals",
                      "news"
                    ],
                    "terminateTLS": true,
                    "sourceAddresses": [
                      "[variables('vnet3Prefix')]",
                      "[variables('vnet2Prefix')]"
                    ]
                  },
                  {
                      "ruleType": "ApplicationRule",
                      "name": "Allow-WindowsUpdate",
                      "protocols": [
                        {
                          "protocolType": "Http",
                          "port": 80
                        },
                        {
                          "protocolType": "Https",
                          "port": 443
                        }
                      ],
                      "fqdnTags": [
                        "WindowsUpdate"
                      ],
                      "webCategories": [],
                      "targetFqdns": [],
                      "targetUrls": [],
                      "terminateTLS": false,
                      "sourceAddresses": [
                        "[variables('vnet3Prefix')]",
                        "[variables('vnet2Prefix')]"
                      ]
                  }
                ]
              }              
            ]
          }
        }
      ]
    }
  ],
  "outputs": {}
}